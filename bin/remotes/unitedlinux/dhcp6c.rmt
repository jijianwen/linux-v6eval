#!/usr/bin/perl

#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007 Yokogawa Electric Corporation,
# YDC Corporation, IPA (Information-technology Promotion Agency, Japan).
# Copyright (C) IBM Corporation 2007.
# All rights reserved.
#
# Redistribution and use of this software in source and binary forms, with
# or without modification, are permitted provided that the following
# conditions and disclaimer are agreed and accepted by the user:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# 3. Neither the names of the copyrighters, the name of the project which
# is related to this software (hereinafter referred to as "project") nor
# the names of the contributors may be used to endorse or promote products
# derived from this software without specific prior written permission.
#
# 4. No merchantable use may be permitted without prior written
# notification to the copyrighters. However, using this software for the
# purpose of testing or evaluating any products including merchantable
# products may be permitted without any notification to the copyrighters.
#
#
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: dhcpv6.p2/remote/manual/dhcp6c.rmt,v 1.3 2007/02/08 06:56:48 hide Exp $
#
########################################################################
use V6evalRemote;
use lib qw(/usr/local/v6eval/bin/unitedlinux);
use linux_common;

rOpen() || goto error;
$system             = rType();
$rOpt_timeout       = 20 if !defined($rOpt_timeout);
$dhcp6c_cmd         = "dhclient -6 -nw -lf /var/lib/dhclient/dhclient6-$rOpt_link0.leases";
$ifconfig_cmd       = "ifconfig";
$dhcp6c_rmt         = "/root/dhcp6c.conf";
$remove_resolv_conf = 0;

# Check arguments
if ( defined($rOpt_start) && !defined($rOpt_link0) ) {
    goto error;
    print STDERR "Specify link0=XXX\n";
}


#rentime
if( defined($rOpt_rentime)) {
#    if($rOpt_rentime)
    $def_rentime = "renew :$rOpt_rentime;";
} else {
    $def_rentime = "\#";
}

#rebtime
if( defined($rOpt_rebtime)) {
    $def_rebtime = "rebind :$rOpt_rebtime;";
} else {
    $def_rebtime = "\#";
}

# Information-request Message
if ( defined($rOpt_inforeq) ) {
    $dhcp6c_cmd .= " -S";
}

# DNS Recursive Name Server Option
if ( defined($rOpt_dns) ) {
    $def_dns            = "request dhcp6.name-servers;";
    $remove_resolv_conf = 1;
}
else {
    $def_dns = "\#";
}

# DNS Search List Option
if ( defined $rOpt_lst ) {
    $def_lst            = "request dhcp6.domain-search;";
    $remove_resolv_conf = 1;
}
else {
    $def_lst = "\#";
}

# SIP Servers IPv6 Address List Option
#if(defined $rOpt_sip){
#	goto notsupported;
#}

# Rapidcommit Option
if ( defined($rOpt_rapidcommit) ) {
    $def_rapidcommit = "send dhcp6.rapid-commit;";
}
else {
    $def_rapidcommit = "\#";
}

$def_iaid = "\#";

# IA-TA Option
if ( defined($rOpt_tempaddress) && defined($rOpt_iaid) ) {
    $dhcp6c_cmd .= " -T";
#    $def_iaid = "send\ dhcp6.ia-ta\ $rOpt_iaid;"; #not support?
}

# IA-NA Options
if ( defined($rOpt_iana) && defined($rOpt_iaid) ) {
    $dhcp6c_cmd .= " -N";
#    $def_iaid = "send\ dhcp6.ia-na\ $rOpt_iaid;"; #should not be configured
}

#Unicast Option
if ( defined $rOpt_unicast ) {
    $def_unicast = "request dhcp6.unicast;";
}
else {
    $def_unicast = "\#";
}

# dhcp6c requests Non-temporary address as default

# Plural IA-NA Options
# XXX: set nutsupported for now
#if(defined $rOpt_IA){
#    goto notsupported;
#}

# Plural IA-PD Options
# XXX: set nutsupported for now
#if(defined $rOpt_Mpd){
#    goto notsupported;
#}

#IAID
#if ( defined($rOpt_iaid) ) {
#    $def_iaid = "send\ dhcp6.ia-na\ $rOpt_iaid" if ( defined($rOpt_iana) );
#    $def_iaid="send\ dhcp6.ia-pd\ $rOpt_iaid" if(defined($rOpt_iapd));
#    $def_iaid = "send\ dhcp6.ia-ta\ $rOpt_iaid" if ( defined($rOpt_iata) );
#}
#else {
#    $def_iaid = "\#";
#}

# IA_PD option and IA_PD Prefix option
if ( defined $rOpt_prefix ) {
    $dhcp6c_cmd .= " -P";
    $def_prefix = "request prefix-delegation;";
}
else {
    $def_prefix = "\#";
}

# optional IAAddress Option
if ( defined $rOpt_address ) {
    goto notsupported;
}

#  Preferred-life time
if ( defined $rOpt_preferlifetime ) {
    goto notsupported;
}

# Valid-life time
if ( defined $rOpt_validlifetime ) {
    goto notsupported;
}

# Authentication protocol
if ( defined($rOpt_authentication) ) {
    goto notsupported;
}

# Excecute each process
rLogin($rOpt_timeout)  || goto error;
linux_dhcp6c()         || goto error;
rLogout($rOpt_timeout) || goto error;

rClose();
exit($V6evalRemote::exitPass);

error:
rClose();
exit($V6evalRemote::exitFail);

notsupported:
rClose();
exit($V6evalRemote::exitNS);

########################################################################
sub linux_dhcp6c() {
    if ($rOpt_start) {
        if ( $remove_resolv_conf == 1 ) {
            rCommand( "rm -f /etc/resolv.conf; touch /etc/resolv.conf", $timeout );
        }
#        linux_kill_dhcp6c() || goto error;
        linux_mkconf()      || goto error;
        linux_wait_tty();
        linux_start_dhcp6c() || goto error;
    }
    elsif ($rOpt_stop) {
        linux_kill_dhcp6c() || goto error;
        linux_wait_tty();
    }
    elsif ($rOpt_restart) {
        linux_kill_dhcp6c() || goto error;
        linux_wait_tty();
        linux_start_dhcp6c() || goto error;
    }
    elsif ($rOpt_release) {
        linux_release_dhcp6c() || goto error;
        linux_init_dhcp6c()    || goto error;
    }
    elsif ($rOpt_ifdown) {
        linux_ifdown_dhcp6c() || goto error;
    }
    elsif ($rOpt_ifup) {
        linux_ifup_dhcp6c() || goto error;
    }
    else {
        print "Nothing happed. Please specify start/stop.\n";
    }
    return (1);

  error:
    return (0);
}

#
sub linux_mkconf() {
    rCommand( "rm -f $dhcp6c_rmt", $timeout ) || goto error;
    rCommand( "echo \"interface \\\"$rOpt_link0\\\" {\" > $dhcp6c_rmt", 15 )
      || goto error;
    rCommand( "echo \"$def_iaid\"     >> $dhcp6c_rmt",    15 ) || goto error;
    rCommand( "echo \"$def_unicast\"     >> $dhcp6c_rmt", 15 ) || goto error;

    #	rCommand("echo \"$def_inforeq\"     >> $dhcp6c_rmt", 15) || goto error;
    rCommand( "echo \"$def_dns\"         >> $dhcp6c_rmt", 15 )
      || goto error;
    rCommand( "echo \"$def_lst\"         >> $dhcp6c_rmt", 15 )
      || goto error;
    rCommand( "echo \"$def_rapidcommit\" >> $dhcp6c_rmt", 15 )
      || goto error;

    #	rCommand("echo \"$def_tempaddress\" >> $dhcp6c_rmt", 15) || goto error;
    rCommand( "echo \"$def_prefix\"      >> $dhcp6c_rmt", 15 )
      || goto error;
    rCommand( "echo \"};\" >> $dhcp6c_rmt", 15 ) || goto error;
    return (1);

  error:
    return (0);
}

#
sub linux_start_dhcp6c() {
    rCommand( "mkdir -p /var/lib/dhclient/", $timeout ) || goto error;
    rCommand( "cat $dhcp6c_rmt",             $timeout ) || goto error;
    rCommand( "$dhcp6c_cmd -cf $dhcp6c_rmt $rOpt_link0", $timeout )
      || goto error;
    return (1);

  error:
    return (0);
}

#
sub linux_ifdown_dhcp6c() {
#    rCommand( "$ifconfig_cmd $rOpt_link0 down", $rOpt_timeout )
#      || goto error;
    rCommand( "ifdown $rOpt_link0", $rOpt_timeout ) || goto error;
    return (1);
  error:
    return (0);
}

#
sub linux_ifup_dhcp6c() {
#    rCommand( "$ifconfig_cmd $rOpt_link0 up", $rOpt_timeout ) || goto error;
    rCommand( "ifup $rOpt_link0", $rOpt_timeout ) || goto error;
    return (1);
  error:
    return (0);
}

#
sub linux_kill_dhcp6c() {
    $ret = rCommand( "killall dhclient", $timeout );
#    if ( $ret == 1 ) {
    if (!defined($rOpt_Link0)) {
        linux_init_dhcp6c() || goto error;
    }
    return (1);

  error:
    return (0);
}

#
sub linux_init_dhcp6c() {
    rCommand( "rm -f /var/lib/dhclient/*", $timeout ) || goto error;
    rCommand( "rm -f /etc/resolv.conf",    $timeout ) || goto error;
    return (1);

  error:
    return (0);
}

#
sub linux_release_dhcp6c() {
    rCommand( "killall dhclient", $timeout );
    rCommand( "$dhcp6c_cmd -r " . "$rOpt_link0", $timeout ) || goto error;
    return (1);

  error:
    return (0);
}

########################################################################
__END__

=head1 NAME

B<dhcp6c.rmt> - set/start/stop/release dhcp client

=head1 SYNOPSIS

B<dhcp6c.rmt> [-commonoption ...] set [rapidcommit|inforeq]
              link0=LINK0_DEV link1=LINK1_DEV
              [timeout=SEC_VALUE]

B<dhcp6c.rmt> [-commonoption ...] start [rapidcommit|inforeq]
              link0=LINK0_DEV link1=LINK1_DEV
              [timeout=SEC_VALUE]

B<dhcp6c.rmt> [-commonoption ...] stop
B<dhcp6c.rmt> [-commonoption ...] release

=head1 DESCRIPTION

B<dhcp6c.rmt set> sets dhcp client parameters.
B<dhcp6c.rmt start> starts dhcp client process associating iapd.
B<dhcp6c.rmt start rapidcommit> starts dhcp client process using rapid commit option.
B<dhcp6c.rmt start inforeq> starts dhcp client process to get configuration parameter.
B<dhcp6c.rmt stop> stop dhcp client process.
B<dhcp6c.rmt release> release delegated prefix information.

B<timeout>: Default timeout value is five seconds.
B<common options>: Please see ``preldoc V6evalRemote''.
B<link0> and B<link1>: NUT's network i/f names for Link0 and Link1.
B<dhcp6c.rmt start> can specifies the following DHCP parameters whose
values are depend on dhcp6c of kame-freebsd now.

  ---------------+----------------------------------
  left value      right value
  ---------------+----------------------------------
  iaid            0
  slaid           1
  slalen          16
  requestoptions  domain-name-servers
  ---------------+----------------------------------

B<dhcp6c.rmt stop> stop to dhcp client process.
B<timeout>: Default timeout value is five seconds.
B<common options>: Please see ``preldoc V6evalRemote''.

=head1 RETURN VALUES

B<dhcp6c.rmt> exits with one of the following values:
 0      command completed successfully
 not 0  command failed

=head1 BUGS

B<dhcp6c.rmt> can run for kame-freebsd only.
Current version of the command needs B<kame-freebsd.rtadvd.tmpl>
on the current directory.

=head1 SEE ALSO

 perldoc V6evalRemote
 dhcp6c.conf(5) for kame-freebsd
 RFC3315.txt
 RFC3319.txt
 RFC3633.txt
 RFC3646.txt
 RFC3736.txt

=cut
