#!/usr/bin/perl
#
# Copyright (C) 2003 Yokogawa Electric Corporation , 
# INTAP(Interoperability Technology Association for Information 
# Processing, Japan) , IPA (Information-technology Promotion Agency,Japan)
# Copyright (C) IBM Corporation 2003.
# All rights reserved.
#
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
#
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
#
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
#
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
#
#
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
#    Author: Kazuo Hiekata <hiekata@yamato.ibm.com>
#
########################################################################
use V6evalRemote;

rOpen() || goto error;
$system=rType();

#
$type=$V6evalTool::NutDef{Type};
if($type eq host) {
#    if($rOpt_Start && !$rOpt_link0) {
     if($rOpt_Start) {
        print STDERR "Specify link0=XXX\n";
        goto error;
    }
}
#else{
#    if($rOpt_Start && (!$rOpt_link0 || !$rOpt_link1)) {
#        print STDERR "Specify link0=XXX or link1=XXX\n";
#        goto error;
#    }
#}

#
$rOpt_timeout=5 if ! defined($rOpt_timeout);

#Start DCHPv6 relay process case

#
$dhcp6s_tmpl="$system".".dhcp6s.tmpl";
$dhcp6s_conf="$system".".dhcp6s.conf";
$dhcp6s_rmt="/tmp/dhcp6s.conf";
$put_timeout=180;

#
if ($V6evalRemote::debug){
    $dhcp6r_cmd="/usr/sbin/dhcp6r -dDf";
}
else{
    $dhcp6r_cmd="/usr/sbin/dhcp6r";
}
#
$ifconfig_cmd="/usr/sbin/ifconfig";

#
rLogin($rOpt_timeout) || goto error;
linux_dhcp6r() || goto error;
rLogout($rOpt_timeout) || goto error;

rClose();
exit($V6evalRemote::exitPass);

error:
    rClose();
    exit($V6evalRemote::exitFail);

notsupported:
    rClose();
    exit($V6evalRemote::exitNS);

########################################################################
sub linux_dhcp6r()
{
    if($rOpt_start) {
	#linux_mkconf() || goto error;
	linux_kill_dhcp6r() || goto error;
	linux_start_dhcp6r() || goto error;
    } elsif($rOpt_set) {
	#linux_mkconf() || goto error;
	linux_kill_dhcp6r() || goto error;
    } elsif($rOpt_stop) {
	linux_kill_dhcp6r() || goto error;
    } elsif($rOpt_release) {
	linux_release_dhcp6r() || goto error;
    } 
    else
    {
	print "Nothing happed. Please specify start/stop.\n";
    }
    return(1);

error:
    return(0);
}

#
sub linux_kill_dhcp6r()
{
    my(@lines);
    my($pid)=0;

    rCommand("rm -f /var/lib/dhcpv6/*", $timeout) || goto error;
    rCommand("ps ax", $timeout) || goto error;
    @lines=rCmdOutput();
    shift(@lines); # remove command line
    pop(@lines);   # remove command prompt
    foreach(@lines) {
	if(/^\s*(\d+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+dhcp6r)/) {
	    #
	    # ps ax
	    # 300  p1  I+     0:00.14 /usr/local/v6/sbin/dhcp6s -c dhcp6s.conf fxp0
	    #
	    $pid=$1;
	}
    }
    if($pid) {
	print "Kill current dhcp6r (pid=$pid)\n" if $V6evalRemote::debug;
	rCommand("kill $pid", $timeout) || goto error;
    }
    return(1);

error:
    return(0);
}

#
sub linux_release_dhcp6s()
{
    my(@lines);
    my($pid)=0;

    rCommand("ps ax", $timeout) || goto error;
    @lines=rCmdOutput();
    shift(@lines); # remove command line
    pop(@lines);   # remove command prompt
    foreach(@lines) {
	if(/^\s*(\d+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+dhcp6r)/) {
	    #
	    # ps ax
	    # 300  p1  I+     0:00.14 /usr/local/v6/sbin/dhcp6s -c dhcp6s.conf fxp0
	    #
	    $pid=$1;
	}
    }
    if($pid) {
	print "Kill SIGTERM current dhcp6r (pid=$pid)\n" if $V6evalRemote::debug;
	rCommand("kill -TERM $pid", $timeout) || goto error;
    }
    return(1);

error:
    return(0);
}

#
sub linux_start_dhcp6r()
{
    print "Start dhcp6r\n" if $V6evalRemote::debug;
    if(rCommand("$dhcp6r_cmd ".
		"", $timeout) != 1) {
		#"$rOpt_link0", $timeout) != 1) {
	return(0);
    }
    return(1);
}

########################################################################
